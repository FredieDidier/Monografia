base = base %>%
mutate(educ_level = case_when(educ == 1 ~ 1,
educ == 2 ~ 2,
educ == 3 ~ 3,
educ == 4 ~ 4)) %>%
select(-c(X))
base2 = read.csv("./input/prop_self_employed_s_inss_ocupados_por_educ.csv")
base2 = base2 %>%
mutate(educ_level = case_when(educ == 1 ~ 5,
educ == 2 ~ 6,
educ == 3 ~ 7,
educ == 4 ~ 8)) %>%
select(-c(X))
base_final = bind_rows(base, base2)
base_final = base_final %>% distinct()
ocup_self_employed = base_final %>%
mutate(educ_level = as.character(educ_level))
graf_occupied_self_employed = ggplot(ocup_self_employed, aes(x = year_quarter, y = 100*proporcao,
color = educ_level, group = educ_level)) +
scale_color_manual(labels = c("(Formal) Incomplete Primary School",
"(Formal) Incomplete High School",
"(Formal) Incomplete College",
"(Formal) Complete College",
"(Informal) Incomplete Primary School",
"(Informal) Incomplete High School",
"(Informal) Incomplete College",
"(Informal) Complete College"), values = c(scales::seq_gradient_pal("#8AC5FF", "#0661BB")(seq(0,1, length.out = 4)),
scales::seq_gradient_pal("#FE7070", "#BC0404")(seq(0,1, length.out = 4)))) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Self-Employed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 15)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
graf_occupied_self_employed
install.packages("remotes")
library(remotes)
remotes::install_version("Rttf2pt1", version = "1.3.10")
install.packages("remotes")
remotes::install_version("Rttf2pt1", version = "1.3.10")
library(tidyverse)
library(extrafont)
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
loadfonts(device = "win")
base = read.csv("./input/prop_cart_ass_ocupados_por_educ.csv")
base = base %>%
mutate(educ_level = case_when(educ == 1 ~ 1,
educ == 2 ~ 2,
educ == 3 ~ 3,
educ == 4 ~ 4))
base2 = read.csv("./input/prop_s_cart_ass_ocupados_por_educ.csv")
base2 = base2 %>%
mutate(educ_level = case_when(educ == 1 ~ 5,
educ == 2 ~ 6,
educ == 3 ~ 7,
educ == 4 ~ 8))
base_final = bind_rows(base, base2)
base_final = base_final %>% distinct()
ocup_private_public_workers = base_final %>%
mutate(educ_level = as.character(educ_level))
graf_occupied_private_public_workers = ggplot(ocup_private_public_workers, aes(x = year_quarter, y = 100*proporcao,
color = educ_level, group = educ_level)) +
scale_color_manual(labels = c("(Formal) Incomplete Primary School",
"(Formal) Incomplete High School",
"(Formal) Incomplete College",
"(Formal) Complete College",
"(Informal) Incomplete Primary School",
"(Informal) Incomplete High School",
"(Informal) Incomplete College",
"(Informal) Complete College"), values = c(scales::seq_gradient_pal("#8AC5FF", "#0661BB")(seq(0,1, length.out = 4)),
scales::seq_gradient_pal("#FE7070", "#BC0404")(seq(0,1, length.out = 4)))) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Private and Public Workers (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
graf_occupied_private_public_workers
remove.packages("remotes")
install.packages("remotes")
install.packages("remotes")
remotes::install_version("Rttf2pt1", version = "1.3.10")
extrafont::font_import()
extrafont::font_import()
install.packages("showtext")
library(showtext)
font_add(family = "LM Roman 10", regular = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
font_add(family = "LM Roman 10", regular = "lmroman.ttf")
font.paths()
font_paths()
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
library(extrafont)
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
font_add(family = "lmroman")
font_add(family = "lmroman", regular = lmroman10.ttf)
library(Rttf2pt1)
library(extrafont)
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
remove.packages("remotes")
remove.packages("Rttf2pt1")
install.packages("remotes")
remotes::install_version("Rttf2pt1", version = "1.3.10")
rm(list = ls())
remotes::install_version("Rttf2pt1", version = "1.3.10")
remotes::install_version("Rttf2pt1", version = "1.3.10")
library(extrafont)
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
remotes::install_version("Rttf2pt1", version = "1.3.8")
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
loadfonts(device = "win")
library(dplyr)
base = read.csv("./input/prop_self_employed_inss_ocupados_por_educ.csv")
base = base %>%
mutate(educ_level = case_when(educ == 1 ~ 1,
educ == 2 ~ 2,
educ == 3 ~ 3,
educ == 4 ~ 4)) %>%
select(-c(X))
base2 = read.csv("./input/prop_self_employed_s_inss_ocupados_por_educ.csv")
base2 = base2 %>%
mutate(educ_level = case_when(educ == 1 ~ 5,
educ == 2 ~ 6,
educ == 3 ~ 7,
educ == 4 ~ 8)) %>%
select(-c(X))
base_final = bind_rows(base, base2)
base_final = base_final %>% distinct()
ocup_self_employed = base_final %>%
mutate(educ_level = as.character(educ_level))
graf_occupied_self_employed = ggplot(ocup_self_employed, aes(x = year_quarter, y = 100*proporcao,
color = educ_level, group = educ_level)) +
scale_color_manual(labels = c("(Formal) Incomplete Primary School",
"(Formal) Incomplete High School",
"(Formal) Incomplete College",
"(Formal) Complete College",
"(Informal) Incomplete Primary School",
"(Informal) Incomplete High School",
"(Informal) Incomplete College",
"(Informal) Complete College"), values = c(scales::seq_gradient_pal("#8AC5FF", "#0661BB")(seq(0,1, length.out = 4)),
scales::seq_gradient_pal("#FE7070", "#BC0404")(seq(0,1, length.out = 4)))) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Self-Employed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 15)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
library(ggplot2)
graf_occupied_self_employed = ggplot(ocup_self_employed, aes(x = year_quarter, y = 100*proporcao,
color = educ_level, group = educ_level)) +
scale_color_manual(labels = c("(Formal) Incomplete Primary School",
"(Formal) Incomplete High School",
"(Formal) Incomplete College",
"(Formal) Complete College",
"(Informal) Incomplete Primary School",
"(Informal) Incomplete High School",
"(Informal) Incomplete College",
"(Informal) Complete College"), values = c(scales::seq_gradient_pal("#8AC5FF", "#0661BB")(seq(0,1, length.out = 4)),
scales::seq_gradient_pal("#FE7070", "#BC0404")(seq(0,1, length.out = 4)))) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Self-Employed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 15)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
graf_occupied_self_employed
ggsave("ocupados_conta_propria_2012-2021.png", path = "./output",
width = 11.19, height = 6.64)
rm(graf_occupied_self_employed)
base = read.csv("./input/prop_cart_ass_ocupados_por_educ.csv")
base = base %>%
mutate(educ_level = case_when(educ == 1 ~ 1,
educ == 2 ~ 2,
educ == 3 ~ 3,
educ == 4 ~ 4))
base2 = read.csv("./input/prop_s_cart_ass_ocupados_por_educ.csv")
base2 = base2 %>%
mutate(educ_level = case_when(educ == 1 ~ 5,
educ == 2 ~ 6,
educ == 3 ~ 7,
educ == 4 ~ 8))
base_final = bind_rows(base, base2)
base_final = base_final %>% distinct()
ocup_private_public_workers = base_final %>%
mutate(educ_level = as.character(educ_level))
graf_occupied_private_public_workers = ggplot(ocup_private_public_workers, aes(x = year_quarter, y = 100*proporcao,
color = educ_level, group = educ_level)) +
scale_color_manual(labels = c("(Formal) Incomplete Primary School",
"(Formal) Incomplete High School",
"(Formal) Incomplete College",
"(Formal) Complete College",
"(Informal) Incomplete Primary School",
"(Informal) Incomplete High School",
"(Informal) Incomplete College",
"(Informal) Complete College"), values = c(scales::seq_gradient_pal("#8AC5FF", "#0661BB")(seq(0,1, length.out = 4)),
scales::seq_gradient_pal("#FE7070", "#BC0404")(seq(0,1, length.out = 4)))) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Private and Public Workers (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
graf_occupied_private_public_workers
ggsave("ocupados_priv_and_pub_2012-2021.png", path = "./output",
width = 11.19, height = 6.64)
rm(graf_occupied_private_public_workers)
df = read_rds("./input/painel_2019.rds")
library(readr)
inativo = df %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4")) %>%
select(workforce_condition, higher_educ_level, year_quarter, weights
) %>%
filter(workforce_condition == 2)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incompleted",
higher_educ_level %in% c(3,4) ~ "Primary School Completed and Incompleted High School",
higher_educ_level %in% c(5,6) ~ "Completed High School and Incompleted College Degree",
higher_educ_level %in% c(7) ~ "Completed College Degree"))  %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
df = read_rds("./input/painel_2019.rds")
inativo = df %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4")) %>%
select(workforce_condition, higher_educ_level, year_quarter, weights
) %>%
filter(workforce_condition == 2)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incompleted",
higher_educ_level %in% c(3,4) ~ "Primary School Completed and Incompleted High School",
higher_educ_level %in% c(5,6) ~ "Completed High School and Incompleted College Degree",
higher_educ_level %in% c(7) ~ "Completed College Degree"))  %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
inativo$labell = inativo$labell * 100
inativo = inativo %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated and Primary School Incompleted" & year_quarter == "2019_1" ~ 51,
higher_educ_label == "Primary School Completed and Incompleted High School" & year_quarter == "2019_1" ~ 20,
higher_educ_label == "Completed High School and Incompleted College Degree" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Completed College Degree" & year_quarter == "2019_1" ~ 7)) %>%
filter(!is.na(labelll))
inativo = inativo[c(2,3,1,7),]
grafico_inat = ggplot(inativo, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Education Level of Inactives in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
library(rcartocolor)
inativo = df %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4")) %>%
select(workforce_condition, higher_educ_level, year_quarter, weights
) %>%
filter(workforce_condition == 2)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incompleted",
higher_educ_level %in% c(3,4) ~ "Primary School Completed and Incompleted High School",
higher_educ_level %in% c(5,6) ~ "Completed High School and Incompleted College Degree",
higher_educ_level %in% c(7) ~ "Completed College Degree"))  %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
inativo$labell = inativo$labell * 100
inativo = inativo %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated and Primary School Incompleted" & year_quarter == "2019_1" ~ 51,
higher_educ_label == "Primary School Completed and Incompleted High School" & year_quarter == "2019_1" ~ 20,
higher_educ_label == "Completed High School and Incompleted College Degree" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Completed College Degree" & year_quarter == "2019_1" ~ 7)) %>%
filter(!is.na(labelll))
inativo = inativo[c(2,3,1,7),]
grafico_inat = ggplot(inativo, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Education Level of Inactives in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
grafico_inat
ggsave("inactives_2019.png", path = "./output", width = 11.19,
height = 6.64)
desempregados = df %>%
filter(workforce_condition == 1, occupation_condition == 2 & worker == 2) %>%
select(workforce_condition, occupation_condition, worker, higher_educ_level, year_quarter,
weights) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree")) %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
desempregados$labell = desempregados$labell * 100
desempregados = desempregados %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated and Primary School Incomplete" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Primary School Complete and Incomplete High School" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Complete High School and Incomplete College Degree" & year_quarter == "2019_1" ~ 46,
higher_educ_label == "Complete College Degree" & year_quarter == "2019_1" ~ 10)) %>%
filter(!is.na(labelll))
desempregados = desempregados[c(2,5,6,3),]
desemp = ggplot(desempregados, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Unemployed in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
library(ggpubr)
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
library(ggpubr)
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
ggsave("unemployed_inactives.png", path = "./output", width = 13.66,
height = 7.05)
grafico_inat = ggplot(inativo, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Inactives in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
ggsave("unemployed_inactives.png", path = "./output", width = 13.66,
height = 7.05)
transicao_educ_10x10 = read.csv("./input/transicoes_por_educ_10_x_10.csv")
transicao_educ_10x10_prop_F = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
View(transicao_educ_10x10_prop_F)
View(transicao_educ_10x10)
library(tidyverse)
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
View(trans)
trans = bind_cols(transicao_educ_10x10, transicao_educ_10x10_prop_F)
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition)
trans = bind_rols(transicao_educ_10x10, transicao_educ_10x10_prop_F)
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
transicao_educ_10x10 = read.csv("./input/transicoes_por_educ_10_x_10.csv")
transicao_educ_10x10_prop_F = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition)
View(transicao_educ_10x10)
View(transicao_educ_10x10_prop_F)
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition) %>%
select(-c(transition))
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
transicao_educ_10x10_prop_F = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition) %>%
select(-c(transition))
View(transicao_educ_10x10_prop_F)
View(transicao_educ_10x10_prop_F)
View(transicao_educ_10x10)
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
View(trans)
library(tidyverse)
library(extrafont)
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
loadfonts(device = "win")
library(ggsci)
library(RColorBrewer)
library(ghibli)
library(dichromat)
library(rcartocolor)
library(grid)
library(gridExtra)
matrizes = read.csv("./input/transicoes_por_educ_3_x_3.csv")
matriz_formal_informal = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 2) %>%
mutate(educ = as.character(educ))
graf_f_i = ggplot(matriz_formal_informal, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"), values = carto_pal(name = "Safe")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Informal (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)+
guides(fill=guide_legend(nrow=4,byrow=TRUE))
graf_f_i
ggsave("transicao_formal_informal.png", path = "./output",
width = 11.19, height = 6.64)
matrizes = read.csv("./input/transicoes_por_educ_3_x_3.csv")
matriz_formal_informal = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 2) %>%
mutate(educ = as.character(educ))
graf_f_i = ggplot(matriz_formal_informal, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"), values = carto_pal(name = "Safe")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Informal (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)+
guides(fill=guide_legend(nrow=4,byrow=TRUE))
ggsave("transicao_formal_informal.png", path = "./output",
width = 11.19, height = 6.64)
View(matriz_formal_informal)
View(matriz_formal_informal)
