df48 = read_rds("./input/trimestre_2021_4_4.rds")
df49 = read_rds("./input/trimestre_2022_1_1.rds")
df50 = read_rds("./input/trimestre_2022_1_2.rds")
df51 = read_rds("./input/trimestre_2022_1_3.rds")
df52 = read_rds("./input/trimestre_2022_1_4.rds")
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16,df17,df18,df19,df20,
df21,df22,df23,df24,df25,df26,df27,df28,df29,df30,
df31,df32,df33,df34,df35,df36,df37,df38,df39,df40,
df41,df42,df43,df44, df45, df46, df47, df48,
df49, df50, df51, df52)
df = df %>%
select(position, social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights, monthly_work_income) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Incomplete Primary School",
higher_educ_level %in% c(3,4) ~ "Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Incomplete College",
higher_educ_level %in% c(7) ~ "Complete College"))   %>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
group_by(year_quarter,higher_educ_label, position) %>%
summarise(labels = sum(weights), wage = sum(monthly_work_income*weights, na.rm = TRUE)/sum(weights)) %>%
mutate(labels = 100 * labels/sum(labels)) %>%
rename(proportion = labels)
position_labels <- c(
"1" = "Inactive",
"2" = "Unemployed",
"3" = "Formal Private Sector",
"4" = "Informal Private Sector",
"5" = "Formal Self-Employed",
"6" = "Informal Self-Employed",
"7" = "Formal Employers",
"8" = "Informal Employers",
"9" = "Formal Public Sector",
"10" = "Informal Public Sector"
)
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.ordered(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2019:2022, "_1"),
labels = 2019:2022) +
facet_wrap(~ position, labeller = as_labeller(position_labels))
}
compare_positions(3, 4, "proportion")
matrizes1 = read.csv("./input/transicoes_por_educ_3_x_3.csv")
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes1 = changing_df(matrizes1)
compare_transitions = function(df, pos1, pos2, var){
df %>%
filter(posicao_inicial == pos1,
posicao_final == pos2) %>%
ggplot(aes(x = trim, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") + ggtitle("") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill = guide_legend(nrow = 4, byrow = TRUE))
}
compare_transitions(matrizes1, 1, 3, "transition")
View(matrizes1)
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes10 = changing_df(matrizes10)
compare_transitions = function(df, pos1, pos2, var){
df %>%
filter(posicao_inicial == pos1,
posicao_final == pos2) %>%
ggplot(aes(x = trim, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") + ggtitle("") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill = guide_legend(nrow = 4, byrow = TRUE))
}
compare_transitions(matrizes10, 3, 4, "transition")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.ordered(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2019:2022, "_1"),
labels = 2019:2022) +
facet_wrap(~ position, labeller = as_labeller(position_labels))
}
df = matrizes10
compare_positions(3, 4, "transition")
compare_positions(3, 4, "proportion")
View(matrizes10)
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes10 = changing_df(matrizes10)
matrizes10 = matrizes10 %>%
group_by(educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition))
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(educ, posicao_inicial, posicao_final) %>%
summarise(trim, transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes10 = changing_df(matrizes10)
compare_transitions = function(df, pos1, pos2, var){
df %>%
filter(posicao_inicial == pos1,
posicao_final == pos2) %>%
ggplot(aes(x = trim, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") + ggtitle("") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill = guide_legend(nrow = 4, byrow = TRUE))
}
compare_transitions(matrizes10, 3, 4, "transition")
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(trim, educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes10 = changing_df(matrizes10)
compare_transitions = function(df, pos1, pos2, var){
df %>%
filter(posicao_inicial == pos1,
posicao_final == pos2) %>%
ggplot(aes(x = trim, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") + ggtitle("") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill = guide_legend(nrow = 4, byrow = TRUE))
}
compare_transitions(matrizes10, 3, 4, "transition")
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(trim, educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
matrizes10 = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
matrizes10 = matrizes10 %>%
group_by(trim, educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition))
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes10 = changing_df(matrizes10)
compare_transitions = function(df, pos1, pos2, var){
df %>%
filter(posicao_inicial == pos1,
posicao_final == pos2) %>%
ggplot(aes(x = trim, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") + ggtitle("") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill = guide_legend(nrow = 4, byrow = TRUE))
}
compare_transitions(matrizes10, 3, 4, "transition")
compare_transitions(matrizes10, 4, 3, "transition")
compare_transitions(matrizes10, 10, 3, "transition")
compare_transitions(matrizes10, 10, 9, "transition")
compare_transitions(matrizes10, 3, 1, "transition")
compare_transitions(matrizes10, 6, 9, "transition")
trimestres <- c("2012_1", "2012_2", "2012_3", "2012_4",
"2013_1", "2013_2", "2013_3", "2013_4",
"2014_1", "2014_2", "2014_3", "2014_4",
"2015_1", "2015_2", "2015_3", "2015_4",
"2016_1", "2016_2", "2016_3", "2016_4",
"2017_1", "2017_2", "2017_3", "2017_4",
"2018_1", "2018_2", "2018_3", "2018_4",
"2019_1", "2019_2", "2019_3", "2019_4",
"2020_1", "2020_2", "2020_3", "2020_4",
"2021_1", "2021_2", "2021_3", "2021_4")
trimestres <- rep(trimestres, 4)
next_trimestres <- c("2012_2", "2012_3", "2012_4",
"2013_1", "2013_2", "2013_3", "2013_4",
"2014_1", "2014_2", "2014_3", "2014_4",
"2015_1", "2015_2", "2015_3", "2015_4",
"2016_1", "2016_2", "2016_3", "2016_4",
"2017_1", "2017_2", "2017_3", "2017_4",
"2018_1", "2018_2", "2018_3", "2018_4",
"2019_1", "2019_2", "2019_3", "2019_4",
"2020_1", "2020_2", "2020_3", "2020_4",
"2021_1", "2021_2", "2021_3", "2021_4", "2022_1")
next_trimestres <- rep(next_trimestres, 4)
educ <- c(
rep(1, 40),
rep(2, 40),
rep(3, 40),
rep(4, 40)
)
source("./analysis/_transition_matrix_function.R")
matrizes <- pmap_dfr(
list(trimestres, next_trimestres, educ),
purrr::insistently(function(trim, next_trim, educ){
message(paste0("Transition ", trim, " to ", next_trim, "\n educ ", educ))
df <- readr::read_rds(
paste0("input/painel_",
trim,
"_",
educ,
".rds")
)
mat <- cria_matriz_transicao(df, trim, next_trim, 10)
colnames(mat) <- 1:10
mat <- as_tibble(mat)
mat$posicao_inicial <- 1:10
mat <- mat %>%
pivot_longer(-posicao_inicial,
names_to = "posicao_final",
values_to = "transition")
mat$educ <- educ
mat$trim <- trim
mat <- mat %>%
relocate(trim, educ, posicao_inicial, posicao_final)
}, quiet = FALSE)
)
matrizes1 = read.csv("./input/transicoes_por_educ_3_x_3.csv")
View(matrizes1)
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
matrizes1 = changing_df(matrizes1)
compare_transitions = function(df, pos1, pos2, var){
df %>%
filter(posicao_inicial == pos1,
posicao_final == pos2) %>%
ggplot(aes(x = trim, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 3) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Proportion") + ggtitle("") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021) +
guides(fill = guide_legend(nrow = 4, byrow = TRUE))
}
compare_transitions(matrizes1, 3, 1, "transition")
compare_transitions(matrizes1, 3, 2, "transition")
compare_transitions(matrizes1, 2, 1, "transition")
matriz = read.csv("./input/transicoes_por_educ_10_x_10.csv")
changing_df = function(df){
df = df %>%
mutate(higher_educ_label = case_when(educ %in% c(1) ~"Incomplete Primary School",
educ %in% c(2) ~ "Incomplete High School",
educ %in% c(3) ~ "Incomplete College",
educ %in% c(4) ~ "Complete College"))%>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
mutate(transition = transition*100)
}
table(matriz$trim)
matriz = changing_df(matriz)
matriz = matriz %>%
group_by(trim, educ, posicao_inicial, posicao_final) %>%
summarise(transition = sum(transition)) %>%
mutate(transition = transition/sum(transition)) %>%
mutate(transition = transition * 100)
compare_transitions(matriz, 3, 4, "transition")
View(matriz)
matriz= changing_df(matriz)
matriz = read.csv("./input/transicoes_por_educ_10_x_10.csv")
matriz= changing_df(matriz)
compare_transitions(matriz, 3, 4, "transition")
compare_transitions(matriz, 3, 9, "transition")
compare_transitions(matriz, 1, 2, "transition")
compare_transitions(matriz, 1, 3, "transition")
df = readr::read_rds("./input/regression.rds")
write.csv(df, "./input/regression.csv")
haven::write_dta(df, "./input/regression.dta")
