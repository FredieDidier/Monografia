dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category == 6) %>%
select(job_function, worker, signed_work_card, year_quarter, weights,
work_category) %>%
filter(year_quarter == "2019_2") %>%
mutate(peso = worker * weights) %>%
summarise(across(c(peso), sum))
dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category == 6) %>%
select(job_function, worker, signed_work_card, year_quarter, weights,
work_category) %>%
filter(year_quarter == "2019_3") %>%
mutate(peso = worker * weights) %>%
summarise(across(c(peso), sum))
dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category == 6) %>%
select(job_function, worker, signed_work_card, year_quarter, weights,
work_category) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso = worker * weights) %>%
summarise(across(c(peso), sum))
# Inativos
dat = data_2019 %>%
filter(workforce_condition == 2) %>%
select(workforce_condition, age)
a = mean(dat$age)
aa = sd(dat$age)
# Setor Privado
dat = data_2019 %>%
filter(job_function %in% c(3) & worker == 1 & work_category == 1) %>%
select(job_function, worker, work_category, age)
b = mean(dat$age)
bb = sd(dat$age)
# Setor P?blico
dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category %in% c(5,7)) %>%
select(job_function, worker, work_category, age)
c = mean(dat$age)
cc = sd(dat$age)
dat = data_2019 %>%
filter(job_function %in% c(5) & worker == 1 & cnpj == 1) %>%
select(job_function, worker, cnpj, age)
d = mean(dat$age)
dd = sd(dat$age)
# Conta Pr?pria
dat = data_2019 %>%
filter(job_function %in% c(6) & worker == 1 & social_security_taxpayer == 1) %>%
select(job_function, worker, social_security_taxpayer, age)
e = mean(dat$age)
ee = sd(dat$age)
dat = data_2019 %>%
filter(job_function %in% c(3) & worker == 1 & work_category == 2) %>%
select(job_function, worker, work_category, age)
f = mean(dat$age)
ff = sd(dat$age)
dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category == 6) %>%
select(job_function, worker, work_category, age)
g = mean(dat$age)
gg = sd(dat$age)
dat = data_2019 %>%
filter(job_function %in% c(5) & worker == 1 & cnpj == 2) %>%
select(job_function, worker, cnpj, age)
h = mean(dat$age)
hh = sd(dat$age)
dat = data_2019 %>%
filter(job_function %in% c(6) & worker == 1 & social_security_taxpayer == 2) %>%
select(job_function, worker, social_security_taxpayer, age)
i = mean(dat$age)
ii = sd(dat$age)
dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category %in% c(5,7)) %>%
select(job_function, worker, work_category, years_of_study)
m = mean(dat$years_of_study)
mm = sd(dat$years_of_study)
dat = data_2019 %>%
filter(job_function %in% c(4) & worker == 1 & work_category %in% c(5,7) &
!is.na(monthly_work_income)) %>%
select(job_function, worker, work_category, monthly_work_income)
mmm = mean(dat$monthly_work_income)
mmmm = sd(dat$monthly_work_income)
library(tidyverse)
library(estimatr)
library(modelsummary)
library(extrafont)
painel = haven::read_dta("Painel_completo.dta")
clean_painel = function(df){
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = idind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
}
data = clean_painel(painel)
data = unite(data, col = "year_quarter", year:quarter, sep = "_")
data_2019 = data %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4"))
sal_ocupacoes = data_2019 %>%
filter(worker == 1) %>%
select(worker, monthly_work_income, job_function, higher_educ_level,
year_quarter) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1) ~"Uneducated",
higher_educ_level %in% c(2) ~ "Primary School Incompleted",
higher_educ_level %in% c(3) ~ "Primary School Completed",
higher_educ_level %in% c(4) ~ "High School Incompleted",
higher_educ_level %in% c(5) ~ "High School Completed",
higher_educ_level %in% c(6) ~ "College Degree Incompleted",
higher_educ_level %in% c(7) ~ "College Degree Completed"))  %>%
group_by(higher_educ_level) %>% mutate(labels = n()) %>%
mutate(labell = round(labels/nrow(.), digits = 2))
memory.limit(24000)
sal_ocupacoes = data_2019 %>%
filter(worker == 1) %>%
select(worker, monthly_work_income, job_function, higher_educ_level,
year_quarter) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1) ~"Uneducated",
higher_educ_level %in% c(2) ~ "Primary School Incompleted",
higher_educ_level %in% c(3) ~ "Primary School Completed",
higher_educ_level %in% c(4) ~ "High School Incompleted",
higher_educ_level %in% c(5) ~ "High School Completed",
higher_educ_level %in% c(6) ~ "College Degree Incompleted",
higher_educ_level %in% c(7) ~ "College Degree Completed"))  %>%
group_by(higher_educ_level) %>% mutate(labels = n()) %>%
mutate(labell = round(labels/nrow(.), digits = 2))
sal_ocupacoes$labell = sal_ocupacoes$labell * 100
sal_ocupacoes = sal_ocupacoes %>%
select(year_quarter, job_function, higher_educ_label, monthly_work_income, labell,
work_category) %>%
group_by(job_function) %>% mutate(labelss = n())%>%
mutate(media = mean(monthly_work_income, na.rm = T)) %>%
mutate(media = round(media, digits = 2)) %>%
mutate(position = case_when(job_function %in% c(1) ~ "Domestic",
job_function %in% c(3) ~ "Private Sector",
job_function %in% c(4) & work_category %in% c(5,7) ~ "Public Sector",
job_function %in% c(5) ~ "Employers",
job_function %in% c(6) ~ "Self-Employed"))
sal_ocupacoes = data_2019 %>%
filter(worker == 1) %>%
select(worker, monthly_work_income, job_function, higher_educ_level,
year_quarter, work_category) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1) ~"Uneducated",
higher_educ_level %in% c(2) ~ "Primary School Incompleted",
higher_educ_level %in% c(3) ~ "Primary School Completed",
higher_educ_level %in% c(4) ~ "High School Incompleted",
higher_educ_level %in% c(5) ~ "High School Completed",
higher_educ_level %in% c(6) ~ "College Degree Incompleted",
higher_educ_level %in% c(7) ~ "College Degree Completed"))  %>%
group_by(higher_educ_level) %>% mutate(labels = n()) %>%
mutate(labell = round(labels/nrow(.), digits = 2))
sal_ocupacoes$labell = sal_ocupacoes$labell * 100
sal_ocupacoes = sal_ocupacoes %>%
select(year_quarter, job_function, higher_educ_label, monthly_work_income, labell,
work_category) %>%
group_by(job_function) %>% mutate(labelss = n())%>%
mutate(media = mean(monthly_work_income, na.rm = T)) %>%
mutate(media = round(media, digits = 2)) %>%
mutate(position = case_when(job_function %in% c(1) ~ "Domestic",
job_function %in% c(3) ~ "Private Sector",
job_function %in% c(4) & work_category %in% c(5,7) ~ "Public Sector",
job_function %in% c(5) ~ "Employers",
job_function %in% c(6) ~ "Self-Employed"))
View(sal_ocupacoes)
serv_cart = data %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4")) %>%
select(signed_work_card, higher_educ_level, year_quarter,
job_function, worker, work_category) %>%
filter(job_function == 4 & work_category %in% c(5,7) & worker == 1)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1) ~"Uneducated",
higher_educ_level %in% c(2) ~ "Primary School Incompleted",
higher_educ_level %in% c(3) ~ "Primary School Completed",
higher_educ_level %in% c(4) ~ "High School Incompleted",
higher_educ_level %in% c(5) ~ "High School Completed",
higher_educ_level %in% c(6) ~ "College Degree Incompleted",
higher_educ_level %in% c(7) ~ "College Degree Completed"))  %>%
group_by(higher_educ_level) %>% mutate(labels = n()) %>%
mutate(labell = round(labels/nrow(.), digits = 2))
serv_cart$labell = serv_cart$labell * 100
serv_cart = serv_cart %>%
select(year_quarter, higher_educ_label, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated" & year_quarter == "2019_1" ~ 1,
higher_educ_label == "Primary School Incompleted" & year_quarter == "2019_1" ~ 8,
higher_educ_label == "Primary School Completed" & year_quarter == "2019_1" ~ 4,
higher_educ_label == "High School Incompleted" & year_quarter == "2019_1" ~ 3,
higher_educ_label == "High School Completed" & year_quarter == "2019_1" ~ 29,
higher_educ_label == "College Degree Incompleted" & year_quarter == "2019_1" ~ 9,
higher_educ_label == "College Degree Completed" & year_quarter == "2019_1" ~ 47)) %>%
filter(!is.na(labelll))
n_grafico = ggplot(serv_cart, aes(x = "", y = labelll,
fill = higher_educ_label)) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Prism")) +
labs(x = "", y = "",
title = "Education Level of Registered Public Sector Employees in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank()) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y")
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
loadfonts(device = "win")
library(ggsci)
library(RColorBrewer)
library(ghibli)
library(dichromat)
library(rcartocolor)
library(grid)
library(gridExtra)
n_grafico = ggplot(serv_cart, aes(x = "", y = labelll,
fill = higher_educ_label)) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Prism")) +
labs(x = "", y = "",
title = "Education Level of Registered Public Sector Employees in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank()) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y")
n_grafico
library(tidyverse)
library(estimatr)
library(modelsummary)
library(extrafont)
painel = haven::read_dta("Painel_completo.dta")
clean_painel = function(df){
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = idind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
}
data = clean_painel(painel)
data = unite(data, col = "year_quarter", year:quarter, sep = "_")
data_2019 = data %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4"))
df_peso = data_2019 %>%
group_by(year_quarter) %>%
summarise(weights = sum(weights))
View(df_peso)
df = data_2019 %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, id, new_id,
work_category)
df_peso$weights[1]
funcao = function(df, initial_quarter, final_quarter, initial_position,
final_position){
df_aux = df %>%
filter(year_quarter == initial_quarter &
position == initial_position)
initial_number = nrow(df_aux)
initial_list = df_aux$id_code
df_2 = df %>%
filter(year_quarter == final_quarter &
position == final_position)
df_2 = df_2 %>%
filter(id_code %in% initial_list)
final_number = nrow(df_2)
final_number/initial_number
}
cria_matriz_transicao = function(df, initial_quarter, final_quarter){
matriz = matrix(nrow = 10, ncol = 10)
for(i in 1:10){
for(j in 1:10){
matriz[i,j] = funcao(df = df,initial_quarter = initial_quarter,
final_quarter = final_quarter, initial_position = i,
final_position = j)
}
}
matriz
}
matriz1 = cria_matriz_transicao(df, "2019_1", "2019_2")
matriz2 = cria_matriz_transicao(df, "2019_2", "2019_3")
matriz3 = cria_matriz_transicao(df, "2019_3", "2019_4")
matriz_final = (matriz1*df_peso$weights[1] + matriz2 *df_peso$weights[2]
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
View(matriz_final)
matriz1*df_peso$weights[1]/sum(df_peso$weights)
df_peso = df_peso[-4,]
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
rm(matriz_final)
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
(matriz1*df_peso$weights[1] + matriz2 *df_peso$weights[2]
+ matriz3 * df_peso$weights[3])
(sum(df_peso$weights))
matriz_final = (matriz1*df_peso$weights[1] + matriz2 *df_peso$weights[2]
+ matriz3 * df_peso$weights[3])/(sum(df_peso$weights))
View(matriz_final)
rm(matriz1, matriz2, matriz3, matriz_final)
df = data_2019 %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
filter(higher_educ_level %in% c(1,2)) %>%
group_by(id_code) %>%
mutate(nova_id = n()) %>%
filter(nova_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, nova_id,
higher_educ_level, work_category)
rm(df)
df = data_2019 %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
filter(higher_educ_level %in% c(1,2)) %>%
group_by(id_code) %>%
mutate(nova_id = n()) %>%
filter(nova_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, nova_id,
higher_educ_level, work_category)
df = data_2019 %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
filter(higher_educ_level %in% c(1,2)) %>%
group_by(id_code) %>%
mutate(nova_id = n()) %>%
filter(nova_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, nova_id,
higher_educ_level, work_category)
memory.limit(24000)
df = data_2019 %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
filter(higher_educ_level %in% c(1,2)) %>%
group_by(id_code) %>%
mutate(nova_id = n()) %>%
filter(nova_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, nova_id,
higher_educ_level, work_category)
matriz4 = cria_matriz_transicao(df, "2019_1", "2019_2")
matriz5 = cria_matriz_transicao(df, "2019_2", "2019_3")
matriz6 = cria_matriz_transicao(df, "2019_3", "2019_4")
+ matriz6 * df_peso$weights[3])/(sum(df_peso$weights))
(matriz4*df_peso$weights[1] + matriz5 *df_peso$weights[2]
+ matriz6 * df_peso$weights[3])
(sum(df_peso$weights))
matriz_final2 = (matriz4*df_peso$weights[1] + matriz5 *df_peso$weights[2]
+ matriz6 * df_peso$weights[3])/(sum(df_peso$weights))
View(matriz_final2)
df_peso
View(matriz_final2)
