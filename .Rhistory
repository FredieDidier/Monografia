scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_f_i
matriz4 = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 3) %>%
group_by(trim, educ) %>%
summarise(transition = sum(transition)) %>%
mutate(educ = as.character(educ))
graf_f_inat = ggplot(matriz4, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Inactive (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank()) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_f_inat
matriz5 = matrizes %>%
filter(posicao_inicial == 2 &
posicao_final == 3) %>%
group_by(trim, educ) %>%
summarise(transition = sum(transition)) %>%
mutate(educ = as.character(educ))
graf_i_inat = ggplot(matriz5, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Informal to Inactive (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank()) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_i_inat
matrizes = read.csv("./Transitions Matrices/transicoes_por_educ.csv")
matriz1 = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 4) %>%
group_by(trim, educ) %>%
summarise(transition = sum(transition)) %>%
mutate(educ = as.character(educ))
graf_f_d = ggplot(matriz1, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Unemployed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank()) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_f_d
graf_f_d = ggplot(matriz1, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Unemployed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.position = "top") +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_f_d
graf_f_d = ggplot(matriz1, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Unemployed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.position = "top") +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_f_d
graf_f_d = ggplot(matriz1, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Unemployed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank()) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
graf_f_d
library(tidyverse)
trimestres <- c("2012_1", "2012_2", "2012_3", "2012_4",
"2013_1", "2013_2", "2013_3", "2013_4",
"2014_1", "2014_2", "2014_3", "2014_4",
"2015_1", "2015_2", "2015_3", "2015_4",
"2016_1", "2016_2", "2016_3", "2016_4",
"2017_1", "2017_2", "2017_3", "2017_4",
"2018_1", "2018_2", "2018_3", "2018_4",
"2019_1", "2019_2", "2019_3", "2019_4",
"2020_1", "2020_2", "2020_3", "2020_4",
"2021_1", "2021_2", "2021_3")
trimestres <- rep(trimestres, 4)
next_trimestres <- c("2012_2", "2012_3", "2012_4",
"2013_1", "2013_2", "2013_3", "2013_4",
"2014_1", "2014_2", "2014_3", "2014_4",
"2015_1", "2015_2", "2015_3", "2015_4",
"2016_1", "2016_2", "2016_3", "2016_4",
"2017_1", "2017_2", "2017_3", "2017_4",
"2018_1", "2018_2", "2018_3", "2018_4",
"2019_1", "2019_2", "2019_3", "2019_4",
"2020_1", "2020_2", "2020_3", "2020_4",
"2021_1", "2021_2", "2021_3", "2021_4")
next_trimestres <- rep(next_trimestres, 4)
educ <- c(
rep(1, 39),
rep(2, 39),
rep(3, 39),
rep(4, 39)
)
source("./Transitions Matrices/Funções para Matriz.R")
matrizes <- pmap_dfr(
list(trimestres, next_trimestres, educ),
function(trim, next_trim, educ){
df <- readr::read_rds(
paste0("Cleaning Data/Paineis/painel_",
trim,
"_",
educ,
".rds")
)
df = df %>%
mutate(aux = case_when(position %in% c(3,5,7,9) ~ 1,
position %in% c(4,6,8,10) ~ 2,
position == 1 ~ 3,
position == 2 ~ 4)) %>%
mutate(position = aux)
mat <- cria_matriz_transicao(df, trim, next_trim, 4)
colnames(mat) <- 1:4
mat <- as_tibble(mat)
mat$posicao_final <- 1:4
mat <- mat %>%
pivot_longer(-posicao_final,
names_to = "posicao_inicial",
values_to = "transition")
mat$educ <- educ
mat$trim <- trim
mat <- mat %>%
relocate(trim, educ, posicao_inicial, posicao_final)
}
)
matrizes = read.csv("./Transitions Matrices/transicoes_por_educ.csv")
matriz1 = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 4) %>%
group_by(trim, educ) %>%
summarise(transition = sum(transition)) %>%
mutate(educ = as.character(educ))
graf_f_d = ggplot(matriz1, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Uneducated and Incompleted Primary School",
"Completed Primary School and Incompleted High School",
"Completed High School and Incompleted College Degree",
"Completed College Degree"), values = carto_pal(name = "Vivid")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Unemployed (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank()) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)
View(matriz1)
df = haven::read_dta("./Raw Data/Painel/pnadcontinua/PNADC2012.dta")
clean_painel = function(df){
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = idind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
}
clean_painel(df)
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = id_ind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
df = clean_painel(df)
clean_painel = function(df){
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = id_ind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
}
df = clean_painel(df)
View(df)
df = df %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, id, new_id,
work_category)
painel = haven::read_dta("Painel_completo.dta")
clean_painel = function(df){
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = idind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
}
df = clean_painel(data)
clean_painel = function(df){
df %>%
select(idind, Ano, Trimestre,
UF, UPA, V1022, V1028, V2007, V2009, V1022,
V1023, V2010, V3003A, V3009A,
V4009, V4012, V4014, V4019,
V4001, V4028, V4029,
V4032, V403312, V4034, V4040, V4013,
V4071, V4076, VD2003,
VD3004, VD3005, VD4001, VD4002,
VD4005, VD4007, VD4009,
V4013, V4039C,
VD4012, VD4017) %>%
rename(id_code = idind, year = Ano, quarter = Trimestre,
primary_sampling_unit = UPA,
area_type = V1023,
weights = V1028,
hours_worked = V4039C,
gender = V2007, age = V2009,
race = V2010,
educ_level = V3003A,
higher_educ_course_attended = V3009A,
sector_code = V4013,
number_of_jobs = V4009,
cnpj = V4019,
job_function = V4012,
job_area = V4014,
worker = V4001,
public_server = V4028,
signed_work_card = V4029,
social_security_taxpayer = V4032,
reference_month_income = V4034,
job_start= V4040,
looked_for_a_job = V4071,
time_without_job = V4076,
number_household_members = VD2003,
higher_educ_level = VD3004,
years_of_study = VD3005,
workforce_condition = VD4001,
occupation_condition = VD4002,
despondent_people = VD4005,
work_position = VD4007,
work_category = VD4009,
social_security_taxpayer_ref_week = VD4012,
monthly_work_income = VD4017,
household_location = V1022)
}
df = clean_painel(painel)
df = unite(data, col = "year_quarter", year:quarter, sep = "_")
df = unite(df, col = "year_quarter", year:quarter, sep = "_")
df = df %>% filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4"))
initial_position = "2019_1"
rm(initial_position)
initial_quarter == "2019_1"
initial_quarter ="2019_1"
final_quarter = "2019_2"
df = df %>%
group_by(id_code) %>%
mutate(id = n()) %>%
filter(id == 4) %>%
mutate(position = case_when(workforce_condition == 2 ~ 1,
worker == 2 & occupation_condition == 2 & workforce_condition == 1 ~ 2,
worker == 1 & work_category == 1 & job_function == 3 ~ 3,
worker == 1 & work_category == 2 & job_function == 3 ~ 4,
worker == 1 & job_function == 6 & social_security_taxpayer == 1 ~ 5,
worker == 1 & job_function == 6 & social_security_taxpayer == 2 ~ 6,
worker == 1 & job_function == 5 & cnpj == 1 ~ 7,
worker == 1 & job_function == 5 & cnpj == 2 ~ 8,
worker == 1 & job_function == 4 & work_category %in% c(5,7) ~ 9,
worker == 1 & job_function == 4 & work_category == 6 ~ 10)) %>%
filter(!is.na(position)) %>%
group_by(id_code) %>%
mutate(new_id = n()) %>%
filter(new_id == 4) %>%
select(id_code, year_quarter, workforce_condition, worker, signed_work_card, cnpj,
job_function, occupation_condition, position, social_security_taxpayer, id, new_id,
work_category)
df_aux = df %>%
filter(year_quarter == initial_quarter &
position == initial_position)
initial_position = 1
final_position = 2
df_aux = df %>%
filter(year_quarter == initial_quarter &
position == initial_position)
matrizes = read.csv("./Transitions Matrices/transicoes_por_educ.csv")
View(matrizes)
View(matrizes)
matriz3 = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 2) %>%
group_by(trim, educ) %>%
summarise(transition = sum(transition)) %>%
mutate(educ = as.character(educ))
View(matriz3)
