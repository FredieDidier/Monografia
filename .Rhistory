higher_educ_label == "Primary School Completed and Incompleted High School" & year_quarter == "2019_1" ~ 20,
higher_educ_label == "Completed High School and Incompleted College Degree" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Completed College Degree" & year_quarter == "2019_1" ~ 7)) %>%
filter(!is.na(labelll))
inativo = inativo[c(2,3,1,7),]
grafico_inat = ggplot(inativo, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Education Level of Inactives in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
library(rcartocolor)
inativo = df %>%
filter(year_quarter %in% c("2019_1", "2019_2", "2019_3", "2019_4")) %>%
select(workforce_condition, higher_educ_level, year_quarter, weights
) %>%
filter(workforce_condition == 2)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incompleted",
higher_educ_level %in% c(3,4) ~ "Primary School Completed and Incompleted High School",
higher_educ_level %in% c(5,6) ~ "Completed High School and Incompleted College Degree",
higher_educ_level %in% c(7) ~ "Completed College Degree"))  %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
inativo$labell = inativo$labell * 100
inativo = inativo %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated and Primary School Incompleted" & year_quarter == "2019_1" ~ 51,
higher_educ_label == "Primary School Completed and Incompleted High School" & year_quarter == "2019_1" ~ 20,
higher_educ_label == "Completed High School and Incompleted College Degree" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Completed College Degree" & year_quarter == "2019_1" ~ 7)) %>%
filter(!is.na(labelll))
inativo = inativo[c(2,3,1,7),]
grafico_inat = ggplot(inativo, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Education Level of Inactives in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
grafico_inat
ggsave("inactives_2019.png", path = "./output", width = 11.19,
height = 6.64)
desempregados = df %>%
filter(workforce_condition == 1, occupation_condition == 2 & worker == 2) %>%
select(workforce_condition, occupation_condition, worker, higher_educ_level, year_quarter,
weights) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree")) %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
desempregados$labell = desempregados$labell * 100
desempregados = desempregados %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated and Primary School Incomplete" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Primary School Complete and Incomplete High School" & year_quarter == "2019_1" ~ 22,
higher_educ_label == "Complete High School and Incomplete College Degree" & year_quarter == "2019_1" ~ 46,
higher_educ_label == "Complete College Degree" & year_quarter == "2019_1" ~ 10)) %>%
filter(!is.na(labelll))
desempregados = desempregados[c(2,5,6,3),]
desemp = ggplot(desempregados, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Unemployed in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
library(ggpubr)
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
library(ggpubr)
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
ggsave("unemployed_inactives.png", path = "./output", width = 13.66,
height = 7.05)
grafico_inat = ggplot(inativo, aes(x = "", y = labelll,
fill = factor(higher_educ_level))) +
geom_bar(stat = "identity")+
scale_fill_manual(name = "Education Level",
values = carto_pal(name = "Safe"),
labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")) +
labs(x = "", y = "",
title = "Inactives in 2019") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
axis.text = element_blank(),
legend.text = element_text(size = 20)) +
geom_label(aes(x = 1.2, label = paste0(labelll, "%")), position = position_stack(vjust = 0.5),
show.legend = F)+
coord_polar("y") +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
ggarrange(desemp, grafico_inat,
common.legend = T,
legend = "bottom")
ggsave("unemployed_inactives.png", path = "./output", width = 13.66,
height = 7.05)
transicao_educ_10x10 = read.csv("./input/transicoes_por_educ_10_x_10.csv")
transicao_educ_10x10_prop_F = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
View(transicao_educ_10x10_prop_F)
View(transicao_educ_10x10)
library(tidyverse)
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
View(trans)
trans = bind_cols(transicao_educ_10x10, transicao_educ_10x10_prop_F)
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition)
trans = bind_rols(transicao_educ_10x10, transicao_educ_10x10_prop_F)
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
transicao_educ_10x10 = read.csv("./input/transicoes_por_educ_10_x_10.csv")
transicao_educ_10x10_prop_F = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition)
View(transicao_educ_10x10)
View(transicao_educ_10x10_prop_F)
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition) %>%
select(-c(transition))
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
transicao_educ_10x10_prop_F = read.csv("./input/transicoes_por_educ_10_x_10_prop_F.csv")
transicao_educ_10x10_prop_F = transicao_educ_10x10_prop_F %>%
mutate(prop = transition) %>%
select(-c(transition))
View(transicao_educ_10x10_prop_F)
View(transicao_educ_10x10_prop_F)
View(transicao_educ_10x10)
trans = bind_rows(transicao_educ_10x10, transicao_educ_10x10_prop_F)
View(trans)
library(tidyverse)
library(extrafont)
font_import(path = "C:/Users/Fredie/AppData/Local/Microsoft/Windows/Fonts")
loadfonts(device = "win")
library(ggsci)
library(RColorBrewer)
library(ghibli)
library(dichromat)
library(rcartocolor)
library(grid)
library(gridExtra)
matrizes = read.csv("./input/transicoes_por_educ_3_x_3.csv")
matriz_formal_informal = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 2) %>%
mutate(educ = as.character(educ))
graf_f_i = ggplot(matriz_formal_informal, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"), values = carto_pal(name = "Safe")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Informal (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)+
guides(fill=guide_legend(nrow=4,byrow=TRUE))
graf_f_i
ggsave("transicao_formal_informal.png", path = "./output",
width = 11.19, height = 6.64)
matrizes = read.csv("./input/transicoes_por_educ_3_x_3.csv")
matriz_formal_informal = matrizes %>%
filter(posicao_inicial == 1 &
posicao_final == 2) %>%
mutate(educ = as.character(educ))
graf_f_i = ggplot(matriz_formal_informal, aes(x = trim, y = 100*transition,
color = educ, group = educ)) +
scale_color_manual(labels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"), values = carto_pal(name = "Safe")) +
geom_line(size = 2) +
geom_point(size = 2) +
labs(x = "", y = "", title = "Formal to Informal (%)") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20)) +
scale_x_discrete(breaks = paste0(2012:2021, "_1"),
labels = 2012:2021)+
guides(fill=guide_legend(nrow=4,byrow=TRUE))
ggsave("transicao_formal_informal.png", path = "./output",
width = 11.19, height = 6.64)
View(matriz_formal_informal)
View(matriz_formal_informal)
df = read_rds("./input/painel_2019.rds")
library(tidyverse)
df = read_rds("./input/painel_2019.rds")
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
workforce_condition == 2 ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
workforce_condition == 1 ~ 0)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_l = laborforce * weights, peso_i = inactive * weights)  %>%
filter(!is.na(peso_l)) %>%
filter(!is.na(peso_i)) %>%
summarise(across(c(peso_l, peso_i), sum))
View(dat_num_inat)
dat_num_m_f = df %>%
mutate(male = case_when(gender == 1 ~ 1,
gender == 2 ~ 0)) %>%
mutate(female = case_when(gender == 1 ~ 0,
gender == 2 ~ 1)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_m = male * weights, peso_f = female * weights) %>%
summarise(across(c(peso_m, peso_f), sum))
View(dat_num_m_f)
View(dat_num_m_f)
dat_num_b_n = df %>%
mutate(negro = case_when(race == 2 | race == 4 | race == 5 ~ 1,
race == 1 | race == 3 ~ 0)) %>%
mutate(branco = case_when(race == 2 | race == 4 | race == 5 ~ 0,
race == 1 | race == 3 ~ 1)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_n = negro * weights, peso_b = branco * weights) %>%
filter(!is.na(peso_n)) %>%
filter(!is.na(peso_b)) %>%
summarise(across(c(peso_n, peso_b), sum))
View(dat_num_b_n)
dat_num_formal_priv = df %>%
filter(job_function %in% c(3) & worker == 1 & work_category == 1) %>%
select(job_function, worker, signed_work_card, year_quarter, weights,
work_category) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso = worker * weights) %>%
summarise(across(c(peso), sum))
View(dat_num_formal_priv)
dat_num_formal_public = df %>%
filter(job_function %in% c(4) & worker == 1 & work_category %in% c(5,7)) %>%
select(job_function, worker, signed_work_card, year_quarter, weights,
work_category)  %>%
filter(year_quarter == "2019_4") %>%
mutate(peso = worker * weights) %>%
summarise(across(c(peso), sum))
View(dat_num_formal_public)
dat_estudo_inat = df %>%
filter(workforce_condition == 2) %>%
select(workforce_condition, years_of_study, weights) %>%
mutate(peso_estudo = wtd.mean(years_of_study, weights = weights)) %>%
mutate(var = wtd.var(years_of_study, weights = weights)) %>%
mutate(sd = sqrt(var)) %>%
summarise(peso_estudo, sd)
library(Hmisc)
dat_estudo_inat = df %>%
filter(workforce_condition == 2) %>%
select(workforce_condition, years_of_study, weights) %>%
mutate(peso_estudo = wtd.mean(years_of_study, weights = weights)) %>%
mutate(var = wtd.var(years_of_study, weights = weights)) %>%
mutate(sd = sqrt(var)) %>%
summarise(peso_estudo, sd)
View(dat_estudo_inat)
dat_estudo_priv_formal = df %>%
filter(job_function %in% c(3) & worker == 1 & work_category == 1) %>%
select(job_function, worker, work_category, years_of_study, weights) %>%
mutate(peso_estudo = wtd.mean(years_of_study, weights = weights)) %>%
mutate(var = wtd.var(years_of_study, weights = weights)) %>%
mutate(sd = sqrt(var)) %>%
summarise(peso_estudo, sd)
View(dat_estudo_priv_formal)
dat_salario_formal_priv = df %>%
filter(job_function %in% c(3) & worker == 1 & work_category == 1 &
!is.na(monthly_work_income)) %>%
select(job_function, worker, work_category, monthly_work_income, weights) %>%
mutate(peso_salario = wtd.mean(monthly_work_income, weights = weights)) %>%
mutate(var = wtd.var(monthly_work_income, weights = weights)) %>%
mutate(sd = sqrt(var)) %>%
summarise(peso_salario, sd)
View(dat_salario_formal_priv)
dat_estudo_priv_informal = df %>%
filter(job_function %in% c(3) & worker == 1 & work_category == 2) %>%
select(job_function, worker, work_category, years_of_study, weights) %>%
mutate(peso_estudo = wtd.mean(years_of_study, weights = weights)) %>%
mutate(var = wtd.var(years_of_study, weights = weights)) %>%
mutate(sd = sqrt(var)) %>%
summarise(peso_estudo, sd)
View(dat_estudo_priv_informal)
df1 = read_rds("./input/trimestre_2019_1_1.rds")
df2 = read_rds("./input/trimestre_2019_1_2.rds")
df3 = read_rds("./input/trimestre_2019_1_3.rds")
df4 = read_rds("./input/trimestre_2019_1_4.rds")
df5 = read_rds("./input/trimestre_2019_2_1.rds")
df6 = read_rds("./input/trimestre_2019_2_2.rds")
df7 = read_rds("./input/trimestre_2019_2_3.rds")
df8 = read_rds("./input/trimestre_2019_2_4.rds")
df9 = read_rds("./input/trimestre_2019_3_1.rds")
df10 = read_rds("./input/trimestre_2019_3_2.rds")
df11 = read_rds("./input/trimestre_2019_3_3.rds")
df12 = read_rds("./input/trimestre_2019_3_4.rds")
df13 = read_rds("./input/trimestre_2019_4_1.rds")
df14 = read_rds("./input/trimestre_2019_4_2.rds")
df15 = read_rds("./input/trimestre_2019_4_3.rds")
df16 = read_rds("./input/trimestre_2019_4_4.rds")
df17 = read_rds("./input/trimestre_2020_1_1.rds")
df18 = read_rds("./input/trimestre_2020_1_2.rds")
df19 = read_rds("./input/trimestre_2020_1_3.rds")
df20 = read_rds("./input/trimestre_2020_1_4.rds")
df21 = read_rds("./input/trimestre_2020_2_1.rds")
df22 = read_rds("./input/trimestre_2020_2_2.rds")
df23 = read_rds("./input/trimestre_2020_2_3.rds")
df24 = read_rds("./input/trimestre_2020_2_4.rds")
df25 = read_rds("./input/trimestre_2020_3_1.rds")
df26 = read_rds("./input/trimestre_2020_3_2.rds")
df27 = read_rds("./input/trimestre_2020_3_3.rds")
df28 = read_rds("./input/trimestre_2020_3_4.rds")
df29 = read_rds("./input/trimestre_2020_4_1.rds")
df30 = read_rds("./input/trimestre_2020_4_2.rds")
df31 = read_rds("./input/trimestre_2020_4_3.rds")
df32 = read_rds("./input/trimestre_2020_4_4.rds")
df33 = read_rds("./input/trimestre_2021_1_1.rds")
df34 = read_rds("./input/trimestre_2021_1_2.rds")
df35 = read_rds("./input/trimestre_2021_1_3.rds")
df36 = read_rds("./input/trimestre_2021_1_4.rds")
df37 = read_rds("./input/trimestre_2021_2_1.rds")
df38 = read_rds("./input/trimestre_2021_2_2.rds")
df39 = read_rds("./input/trimestre_2021_2_3.rds")
df40 = read_rds("./input/trimestre_2021_2_4.rds")
df41 = read_rds("./input/trimestre_2021_3_1.rds")
df42 = read_rds("./input/trimestre_2021_3_2.rds")
df43 = read_rds("./input/trimestre_2021_3_3.rds")
df44 = read_rds("./input/trimestre_2021_3_4.rds")
df45 = read_rds("./input/trimestre_2021_4_1.rds")
df46 = read_rds("./input/trimestre_2021_4_2.rds")
df47 = read_rds("./input/trimestre_2021_4_3.rds")
df48 = read_rds("./input/trimestre_2021_4_4.rds")
View(df1)
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16,df17,df18,df19,df20,
df21,df22,df23,df24,df25,df26,df27,df28,df29,df30,
df31,df32,df33,df34,df35,df36,df37,df38,df39,df40,
df41,df42,df43,df44)
trab_conta_propria_n_INSS = df %>%
select(social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights) %>%
filter(job_function == 6 & social_security_taxpayer == 2 & worker == 1)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree"))   %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
trab_conta_propria_n_INSS$labell = trab_conta_propria_n_INSS$labell * 100
trab_conta_propria_n_INSS = trab_conta_propria_n_INSS %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct() %>%
mutate(labelll = case_when(higher_educ_label == "Uneducated and Primary School Incomplete" & year_quarter == "2019_1" ~ 39,
higher_educ_label == "Primary School Complete and Incomplete High School" & year_quarter == "2019_1" ~ 18,
higher_educ_label == "Complete High School and Incomplete College Degree" & year_quarter == "2019_1" ~ 33,
higher_educ_label == "Complete College Degree" & year_quarter == "2019_1" ~ 10)) %>%
filter(!is.na(labelll))
View(trab_conta_propria_n_INSS)
trab_conta_propria_n_INSS = df %>%
select(social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights) %>%
filter(job_function == 6 & social_security_taxpayer == 2 & worker == 1)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree"))   %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
trab_conta_propria_n_INSS$labell = trab_conta_propria_n_INSS$labell * 100
View(trab_conta_propria_n_INSS)
table(df$year_quarter)
trab_conta_propria_n_INSS = trab_conta_propria_n_INSS %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell) %>%
distinct()
trab_conta_propria_n_INSS = df %>%
select(social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights) %>%
filter(job_function == 6 & social_security_taxpayer == 2 & worker == 1)  %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree"))   %>%
group_by(higher_educ_level) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
trab_conta_propria_n_INSS$labell = trab_conta_propria_n_INSS$labell * 100
trab_conta_propria_n_INSS = trab_conta_propria_n_INSS %>%
select(year_quarter, higher_educ_label, higher_educ_level, labell)
table(trab_conta_propria_n_INSS$labell)
View(df)
table(df$position)
trab_conta_propria_n_INSS = df %>%
select(position, social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree"))   %>%
group_by(year_quarter,higher_educ_level, position) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
View(trab_conta_propria_n_INSS)
trab_conta_propria_n_INSS$labell = trab_conta_propria_n_INSS$labell * 100
trab_conta_propria_n_INSS = df %>%
filter(position == 6) %>%
select(position, social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Uneducated and Primary School Incomplete",
higher_educ_level %in% c(3,4) ~ "Primary School Complete and Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Complete High School and Incomplete College Degree",
higher_educ_level %in% c(7) ~ "Complete College Degree"))   %>%
group_by(year_quarter,higher_educ_level, position) %>% mutate(labels = sum(weights)) %>%
ungroup() %>%
mutate(labell = round(labels/sum(weights), digits = 2))
df1 = read_rds("./input/trimestre_2019_1_1.rds")
df2 = read_rds("./input/trimestre_2019_1_2.rds")
df3 = read_rds("./input/trimestre_2019_1_3.rds")
df4 = read_rds("./input/trimestre_2019_1_4.rds")
df5 = read_rds("./input/trimestre_2019_2_1.rds")
df6 = read_rds("./input/trimestre_2019_2_2.rds")
df7 = read_rds("./input/trimestre_2019_2_3.rds")
df8 = read_rds("./input/trimestre_2019_2_4.rds")
df9 = read_rds("./input/trimestre_2019_3_1.rds")
df10 = read_rds("./input/trimestre_2019_3_2.rds")
df11 = read_rds("./input/trimestre_2019_3_3.rds")
df12 = read_rds("./input/trimestre_2019_3_4.rds")
df13 = read_rds("./input/trimestre_2019_4_1.rds")
df14 = read_rds("./input/trimestre_2019_4_2.rds")
df15 = read_rds("./input/trimestre_2019_4_3.rds")
df16 = read_rds("./input/trimestre_2019_4_4.rds")
df17 = read_rds("./input/trimestre_2020_1_1.rds")
rm(df17)
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16)
painel_2019 = df
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
workforce_condition == 2 ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
workforce_condition == 1 ~ 0)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_l = laborforce * weights, peso_i = inactive * weights)  %>%
filter(!is.na(peso_l)) %>%
filter(!is.na(peso_i)) %>%
summarise(across(c(peso_l, peso_i), sum))
View(dat_num_inat)
dat_num_m_f = df %>%
mutate(male = case_when(gender == 1 ~ 1,
gender == 2 ~ 0)) %>%
mutate(female = case_when(gender == 1 ~ 0,
gender == 2 ~ 1)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_m = male * weights, peso_f = female * weights) %>%
summarise(across(c(peso_m, peso_f), sum))
View(dat_num_m_f)
