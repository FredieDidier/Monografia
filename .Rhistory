plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021)
}
plot_position(1, "proportion")
plot_position(1, "wage")
df
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16,df17,df18,df19,df20,
df21,df22,df23,df24,df25,df26,df27,df28,df29,df30,
df31,df32,df33,df34,df35,df36,df37,df38,df39,df40,
df41,df42,df43,df44)
df = df %>%
select(position, social_security_taxpayer, higher_educ_level, year_quarter,
job_function, worker, weights, monthly_work_income) %>%
mutate(higher_educ_label = case_when(higher_educ_level %in% c(1,2) ~"Incomplete Primary School",
higher_educ_level %in% c(3,4) ~ "Incomplete High School",
higher_educ_level %in% c(5,6) ~ "Incomplete College",
higher_educ_level %in% c(7) ~ "Complete College"))   %>%
mutate(higher_educ_label = factor(higher_educ_label, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College"))) %>%
group_by(year_quarter,higher_educ_label, position) %>%
summarise(labels = sum(weights), wage = sum(monthly_work_income*weights, na.rm = TRUE)/sum(weights)) %>%
mutate(labels = 100 * labels/sum(labels)) %>%
rename(proportion = labels)
plot_position <- function(pos, var){
df %>%
filter(position == pos) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
ggtitle(position_labels[pos]) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021)
}
compare_positions <- function(pos1, pos2, var){
g1 <- plot_position(pos1, var)
g2 <- plot_position(pos2, var)
ggarrange(g1, g2, nrow = 1, common.legend = TRUE, legend = "bottom")
}
plot_position <- function(pos, var){
df %>%
filter(position == pos) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
ggtitle(position_labels[pos]) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021)
}
compare_positions <- function(pos1, pos2, var){
g1 <- plot_position(pos1, var)
g2 <- plot_position(pos2, var)
ggarrange(g1, g2, nrow = 1, common.legend = TRUE, legend = "bottom")
}
compare_positions(1, 2, "proportion")
compare_positions(1, 2, "wage")
df
plot_position(1, "wage")
df
plot_position <- function(pos, var){
df %>%
filter(position == pos) %>%
ggplot(aes(x = year_quarter, y = wage, group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
ggtitle(position_labels[pos]) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021)
}
plot_position(1, "wage")
df %>%
filter(position == 1) %>%
ggplot(aes(x = year_quarter, y = wage, group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2)
df %>% filter(position == 1)
plot_position <- function(pos, var){
df %>%
filter(position == pos) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
ggtitle(position_labels[pos]) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021)
}
compare_positions <- function(pos1, pos2, var){
g1 <- plot_position(pos1, var)
g2 <- plot_position(pos2, var)
ggarrange(g1, g2, nrow = 1, common.legend = TRUE, legend = "bottom")
}
compare_positions(3, 4, "wage")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
ggtitle(position_labels[pos]) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = labeller(position_labels))
}
compare_positions(1,2,"wage")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = labeller(position_labels))
}
compare_positions(1,2,"wage")
compare_positions(3,4,"wage")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = labeller(position_labels))
}
compare_positions(3,4,"wage")
position_labels
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = position_labels)
}
compare_positions(3,4,"wage")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = position_labels[c(pos1, pos2)])
}
compare_positions(3,4,"wage")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = position_labels[c(3,4)])
}
compare_positions(3,4,"wage")
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom") +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = as_labeller(position_labels))
}
compare_positions(3,4,"wage")
?as_labeller
compare_positions <- function(pos1, pos2, var){
df %>%
filter(position %in% c(pos1, pos2)) %>%
mutate(position = as.character(position)) %>%
ggplot(aes(x = year_quarter, y = get(var), group = higher_educ_label, color = higher_educ_label)) +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "", y = "") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
strip.text = element_text(size = 13, face = "bold", hjust = 0.5)) +
scale_x_discrete(breaks = paste0(2019:2021, "_1"),
labels = 2019:2021) +
facet_wrap(~ position, labeller = as_labeller(position_labels))
}
compare_positions(3,4,"wage")
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16)
df
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
workforce_condition == 2 ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
workforce_condition == 1 ~ 0)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_l = laborforce * weights, peso_i = inactive * weights)  %>%
filter(!is.na(peso_l)) %>%
filter(!is.na(peso_i)) %>%
summarise(across(c(peso_l, peso_i), sum))
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
workforce_condition == 2 ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
workforce_condition == 1 ~ 0)) %>%
filter(year_quarter == "2019_4") %>%
mutate(peso_l = laborforce * weights, peso_i = inactive * weights)  %>%
filter(!is.na(peso_l)) %>%
filter(!is.na(peso_i))
df
df %>% select(peso_l, peso_i)
dat_num_inat %>% select(peso_l, peso_i)
dat_num_inat %>% select(year_quarter, educ, peso_l, peso_i)
dat_num_inat %>% select(year_quarter, peso_l, peso_i)
df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>%
summarise(laborforce = sum(laborforce * weights), inactive = sum(inactive * weights), weights = sum(weights))
df1
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15)
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>%
summarise(laborforce = sum(laborforce * weights), inactive = sum(inactive * weights), weights = sum(weights)) %>%
summarise(across(c(laborforce, inactive), ~ sum(. * weights)/sum(weights)))
dat_num_inat
df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter)
df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>% select(year_quarter, laborforce, inactive)
df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>% select(year_quarter, laborforce, inactive, weights)
df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>%
summarise(laborforce = sum(laborforce * weights), inactive = sum(inactive * weights), weights = sum(weights))
dat_num_m_f = df %>%
mutate(male = case_when(gender == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(female = case_when(gender == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>%
summarise(male = sum(male * weights), female = sum(female * weights), weights = sum(weights)) %>%
summarise(across(c(male, female), ~ sum(. * weights)/sum(weights)))
dat_num_m_f
dat_num_b_n = df %>%
mutate(negro = case_when(race == 2 | race == 4 | race == 5 ~ 1,
TRUE ~ 0)) %>%
mutate(branco = case_when(race == 2 | race == 4 | race == 5 ~ 0,
TRUE ~ 1)) %>%
group_by(year_quarter) %>%
summarise(negro = sum(negro * weights), branco = sum(branco * weights), weights = sum(weights)) %>%
summarise(across(c(negro, branco), ~ sum(. * weights)/sum(weights)))
dat_num_b_n
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
group_by(year_quarter) %>%
summarise(laborforce = sum(laborforce * weights), inactive = sum(inactive * weights), weights = sum(weights)) %>%
summarise(across(c(laborforce, inactive), ~ sum(. * weights)/sum(weights)))
dat_num_inat
dat_num_inat = df %>%
mutate(laborforce = case_when(workforce_condition == 1 ~ 1,
TRUE ~ 0)) %>%
mutate(inactive = case_when(workforce_condition == 2 ~ 1,
TRUE ~ 0)) %>%
summarise(across(c(laborforce, inactive), ~ sum(. * weights)/sum(weights)))
dat_num_inat
library(haven)
d = read_dta('/data-raw/Painel/pnadcontinua/PNAD_painel_3_rs.dta')
d = read_dta("./data-raw/Painel/pnadcontinua/PNAD_painel_3_rs.dta")
source("./build/_cleaning_paineis.R")
library(tidyverse)
list_trimestres = c("2012_1", "2012_3",
"2013_1", "2013_3",
"2014_1", "2014_3",
"2015_1", "2015_3",
"2016_1", "2016_3",
"2017_1", "2017_3",
"2018_1", "2018_3",
"2019_1", "2019_3",
"2020_1", "2020_3",
"2021_1", "2021_3")
df = map(list_trimestres,
function(trim){
df <- haven::read_dta(paste0("data-raw/Trimestres/painel_", trim, ".dta")) %>%
clean_painel() %>%
aggregate_sectors()
}
) %>% bind_rows()
source("./build/_cleaning_paineis.R")
source("./build/_aggregating_sector_codes.R")
list_trimestres = c("2012_1", "2012_3",
"2013_1", "2013_3",
"2014_1", "2014_3",
"2015_1", "2015_3",
"2016_1", "2016_3",
"2017_1", "2017_3",
"2018_1", "2018_3",
"2019_1", "2019_3",
"2020_1", "2020_3",
"2021_1", "2021_3")
df = map(list_trimestres,
function(trim){
df <- haven::read_dta(paste0("data-raw/Trimestres/painel_", trim, ".dta")) %>%
clean_painel() %>%
aggregate_sectors()
}
) %>% bind_rows()
trimestres <- c("2012_1", "2012_2", "2012_3", "2012_4",
"2013_1", "2013_2", "2013_3", "2013_4",
"2014_1", "2014_2", "2014_3", "2014_4",
"2015_1", "2015_2", "2015_3", "2015_4",
"2016_1", "2016_2", "2016_3", "2016_4",
"2017_1", "2017_2", "2017_3", "2017_4",
"2018_1", "2018_2", "2018_3", "2018_4",
"2019_1", "2019_2", "2019_3", "2019_4",
"2020_1", "2020_2", "2020_3", "2020_4",
"2021_1", "2021_2", "2021_3")
trimestres <- rep(trimestres, 4)
educ <- c(
rep(1, 39),
rep(2, 39),
rep(3, 39),
rep(4, 39)
)
map(trimestres,
function(trim){
base::message(paste0("Trimester ", trim))
df <- haven::read_dta(
paste0("data-raw/Trimestres/painel_",
trim,
".dta")
) %>%
clean_painel() %>%
aggregate_sectors()
map(1:4,
function(educ_level){
base::message(paste0("    ", "Education level ", educ_level))
df %>%
filter(educ == educ_level, year_quarter == trim) %>%
write_rds(paste0("input/trimestre_", trim, "_", educ_level, ".rds"))
}
)
}
)
library(tidyverse)
df1 = read_rds("./input/trimestre_2019_1_1.rds")
df2 = read_rds("./input/trimestre_2019_1_2.rds")
df3 = read_rds("./input/trimestre_2019_1_3.rds")
df4 = read_rds("./input/trimestre_2019_1_4.rds")
df5 = read_rds("./input/trimestre_2019_2_1.rds")
df6 = read_rds("./input/trimestre_2019_2_2.rds")
df7 = read_rds("./input/trimestre_2019_2_3.rds")
df8 = read_rds("./input/trimestre_2019_2_4.rds")
df9 = read_rds("./input/trimestre_2019_3_1.rds")
df10 = read_rds("./input/trimestre_2019_3_2.rds")
df11 = read_rds("./input/trimestre_2019_3_3.rds")
df12 = read_rds("./input/trimestre_2019_3_4.rds")
df13 = read_rds("./input/trimestre_2019_4_1.rds")
df14 = read_rds("./input/trimestre_2019_4_2.rds")
df15 = read_rds("./input/trimestre_2019_4_3.rds")
df16 = read_rds("./input/trimestre_2019_4_4.rds")
df = bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,
df11,df12,df13,df14,df15,df16)
d = df %>% filter(year_quarter == "2019_1") %>% mutate(soma = sum(weights))
table(d$soma)
