legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2013, 2021, 2), "1"),
labels = seq(2013,2021, 2)) +
facet_wrap(~ transition, labeller = as_labeller(transition_labels))
df %>%
filter(transition %in% c(t1,t2,t3)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 4) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2013, 2021, 2), "1"),
labels = seq(2013,2021, 2)) +
facet_wrap(~ transition, labeller = as_labeller(transition_labels))
compare_transitions = function(df, t1, t2, t3){
df %>%
filter(transition %in% c(t1,t2,t3)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 4) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2013, 2021, 2), "1"),
labels = seq(2013,2021, 2)) +
facet_wrap(~ transition, labeller = as_labeller(transition_labels))
}
compare_transitions(df, 0, 1, 2)
compare_transitions = function(df, t1, t2, t3){
df %>%
filter(transition %in% c(t1,t2,t3)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient") +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2013, 2021, 2), "1"),
labels = seq(2013,2021, 2)) +
facet_wrap(~ transition, labeller = as_labeller(transition_labels))
}
compare_transitions(df, 0, 1, 2)
b = df %>% filter(transition == 2)
View(b)
b = df %>% filter(transition == 0)
View(b)
ggsave("formal_transitions.png", path = "./output",
width = 13.66, height = 7.05)
compare_transitions(df, 3, 4, 5)
ggsave("informal_transitions.png", path = "./output",
width = 13.66, height = 7.05)
rm(b)
b = df %>% filter(transition == 0)
View(b)
b = df %>% filter(transition == 0 & educ == "Complete College")
mean(b$coef)
rm(b)
i = readRDS("./input/trimestre_2012_1_1.rds")
ii = readRDS("./input/trimestre_2012_2_2.rds")
i = readRDS("./input/trimestre_2012_2_1.rds")
View(i)
View(ii)
j = read.csv("./input/transicoes_por_educ_3_x_3.csv")
View(j)
i = i %>%
library(tidyverse)
i = i %>% group_by(id_code) %>% summarise(n = n())
View(i)
ii = ii %>% group_by(id_code) %>% summarise(n = n())
table(i$n)
table(ii$n)
table(i$id_code)
t = left_join(i, ii)
View(t)
table(t$n)
rm(j)
t = bind_rows(i, ii)
table(t$n)
291459 + 83445
library(tidyverse)
i = read_rds("./input/trimestre_2013_1_1.rds")
ii = read_rds("./input/trimestre_2013_1_2.rds")
iii = read_rds("./input/trimestre_2013_1_3.rds")
iiii = read_rds("./input/trimestre_2013_1_4.rds")
reg = bind_rows(i,ii,iii,iiii)
View(reg)
table(reg$sector_code)
j = read_rds("./input/trimestre_2013_1_1.rds")
j = read_rds("./input/trimestre_2013_1_2.rds")
j = read_rds("./input/trimestre_2013_1_1.rds")
jj = read_rds("./input/trimestre_2013_1_2.rds")
jjj = read_rds("./input/trimestre_2013_1_3.rds")
jjjj = read_rds("./input/trimestre_2013_1_4.rds")
reg1 = bind_rows(j,jj,jjj,jjjj)
table(reg1$sector_code)
j = read_rds("./input/trimestre_2013_4_1.rds")
jj = read_rds("./input/trimestre_2013_4_2.rds")
jjj = read_rds("./input/trimestre_2013_4_3.rds")
jjjj = read_rds("./input/trimestre_2013_4_4.rds")
reg1 = bind_rows(j,jj,jjj,jjjj)
table(reg1$sector_code)
f = read_rds("./input/trimestre_2013_3_1.rds")
ff = read_rds("./input/trimestre_2013_3_2.rds")
fff = read_rds("./input/trimestre_2013_3_3.rds")
ffff = read_rds("./input/trimestre_2013_4_3.rds")
reg2 = bind_rows(f,ff,fff,ffff)
table(reg2$sector_code)
cor(educ, homem)
cor(educ, gender)
cor(ffff, educ, gender)
cor(ffff$educ, ffff$gender)
reg = reg %>% base_reg = base_reg %>%
mutate(position_names = case_when(position %in% c(3,5,7,9) ~ "Formal",
position %in% c(4,6,8,10) ~ "Informal",
position %in% c(1,2) ~ "Non-Employed")) %>%
mutate(homem = case_when(gender == 1 ~ 1,
gender == 2 ~ 0)) %>%
mutate(negro = case_when(race == 2 | race == 4 | race == 5 ~ 1,
race == 1 | race == 3 ~ 0)) %>%
mutate(urbana = case_when(household_location == 1 ~ 1,
household_location == 2 ~ 0))
reg = reg %>% mutate(position_names = case_when(position %in% c(3,5,7,9) ~ "Formal",
position %in% c(4,6,8,10) ~ "Informal",
position %in% c(1,2) ~ "Non-Employed")) %>%
mutate(homem = case_when(gender == 1 ~ 1,
gender == 2 ~ 0)) %>%
mutate(negro = case_when(race == 2 | race == 4 | race == 5 ~ 1,
race == 1 | race == 3 ~ 0)) %>%
mutate(urbana = case_when(household_location == 1 ~ 1,
household_location == 2 ~ 0))
reg = reg %>% mutate(year_quarter = str_remove(year_quarter, "_")) %>%
mutate(year_quarter = as.numeric(year_quarter)) %>%
group_by(id_code) %>%
arrange(year_quarter) %>%
mutate(lead_position = dplyr::lead(position_names)) %>%
mutate(position_transition = paste(position_names, sep = " to ", lead_position)) %>%
filter(!str_detect(position_transition, "NA"))
table(reg$sector_code)
i = read_rds("./input/trimestre_2013_1_1.rds")
ii = read_rds("./input/trimestre_2013_1_2.rds")
iii = read_rds("./input/trimestre_2013_1_3.rds")
iiii = read_rds("./input/trimestre_2013_1_4.rds")
reg = bind_rows(i,ii,iii,iiii)
reg = reg %>%
mutate(position_names = case_when(position %in% c(3,5,7,9) ~ "Formal",
position %in% c(4,6,8,10) ~ "Informal",
position %in% c(1,2) ~ "Non-Employed")) %>%
mutate(homem = case_when(gender == 1 ~ 1,
gender == 2 ~ 0)) %>%
mutate(negro = case_when(race == 2 | race == 4 | race == 5 ~ 1,
race == 1 | race == 3 ~ 0)) %>%
mutate(urbana = case_when(household_location == 1 ~ 1,
household_location == 2 ~ 0))
r = read_rds("./input/trimestre_2013_2_1.rds")
rr = read_rds("./input/trimestre_2013_2_2.rds")
rrr = read_rds("./input/trimestre_2013_2_3.rds")
rrrr = read_rds("./input/trimestre_2013_2_4.rds")
reg1 = bind_rows(r,rr,rrr,rrrr)
reg_1 = bind_rows(reg, reg1)
reg = reg_1
reg = reg %>%
mutate(year_quarter = str_remove(year_quarter, "_")) %>%
mutate(year_quarter = as.numeric(year_quarter)) %>%
group_by(id_code) %>%
arrange(year_quarter) %>%
mutate(lead_position = dplyr::lead(position_names)) %>%
mutate(position_transition = paste(position_names, sep = " to ", lead_position)) %>%
filter(!str_detect(position_transition, "NA"))
View(reg1)
View(reg_1)
table(reg_1$year_quarter)
reg = reg_1
reg = reg %>%
mutate(year_quarter = str_remove(year_quarter, "_")) %>%
mutate(year_quarter = as.numeric(year_quarter)) %>%
group_by(id_code) %>%
arrange(year_quarter) %>%
mutate(lead_position = dplyr::lead(position_names))
View(reg)
table(reg$lead_position)
table(reg$educ)
library(rcartocolor)
library(extrafont)
base = haven::read_dta("./input/reg_grafico.dta")
base = base %>%
mutate(educ = case_when(educ == 1 ~ "Incomplete Primary School",
educ == 2 ~ "Incomplete High School",
educ == 3 ~ "Incomplete College",
educ == 4 ~ "Complete College")) %>%
mutate(educ = factor(educ, ordered = TRUE, levels = c("Incomplete Primary School",
"Incomplete High School",
"Incomplete College",
"Complete College")))
transition_labels = c(
"0" = "Formal to Formal",
"1" = "Formal to Informal",
"2" = "Formal to Non-Employee",
"3" = "Informal to Formal",
"4" = "Informal to Informal",
"5" = "Informal to Non-Employee"
)
df = base
df = df %>%
mutate(year_quarter = as.character(year_quarter))
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2013, 2021, 2), "1"),
labels = seq(2013,2021, 2))
}
compare_transitions(df, 0) # Formal - 0:2
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2022, 1))
}
compare_transitions(df, 0) # Formal - 0:2
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2021, 1))
}
compare_transitions(df, 0) # Formal - 0:2
ggsave("formal_to_formal_transitions.png", path = "./output",
width = 13.66, height = 7.05)
compare_transitions(df, 1) # Formal - 0:2
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2021, 1))
}
compare_transitions(df, 1) # Formal - 0:2
View(df)
transition_labels = c(
"0" = "Formal to Formal",
"1" = "Formal to Informal",
"2" = "Formal to Non-Employee",
"3" = "Informal to Formal",
"4" = "Informal to Informal",
"5" = "Informal to Non-Employee"
)
df = base
df = df %>%
mutate(year_quarter = as.character(year_quarter))
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2021, 1))
}
compare_transitions(df, 1) # Formal - 0:2
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = as.ordered(transition_labels)) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2021, 1))
}
compare_transitions(df, 1) # Formal - 0:2
1 = t1
df %>%
filter(transition %in% c(1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2021, 1))
transition_labels
transition_labels[2]
compare_transitions = function(df, t1){
df %>%
filter(transition %in% c(t1)) %>%
mutate(transition = as.ordered(transition)) %>%
ggplot(aes(x = year_quarter, y = coef, group = educ, color = educ))  +
geom_point(size = 2) +
geom_line(size = 2) +
scale_color_manual(name = "Education Level",
values = carto_pal(name = "Safe")) +
labs(x = "Year", y = "Coefficient", title = transition_labels[t1 + 1]) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 20),
legend.position = "bottom",
axis.title = element_text(size = 18, face = "bold", hjust = 0.5),
strip.text = element_text(size = 18, face = "bold", hjust = 0.5),
axis.line = element_line(size = 0.75, colour = "black"),
axis.text = element_text(
family = "Helvetica",
colour = "red",
size = rel(1.2)
)) +
scale_x_discrete(breaks = paste0(seq(2012, 2021, 1), "1"),
labels = seq(2012,2021, 1))
}
compare_transitions(df, 1) # Formal - 0:2
ggsave("formal_to_informal_transitions.png", path = "./output",
width = 13.66, height = 7.05)
compare_transitions(df, 2) # Formal - 0:2
ggsave("formal_to_non_employee_transitions.png", path = "./output",
width = 13.66, height = 7.05)
compare_transitions(df, 3) # Informal - 3:5
ggsave("informal_to_formal_transitions.png", path = "./output",
width = 13.66, height = 7.05)
compare_transitions(df, 4) # Informal - 3:5
ggsave("informal_to_informal_transitions.png", path = "./output",
width = 13.66, height = 7.05)
compare_transitions(df, 5) # Informal - 3:5
ggsave("informal_to_non_employee_transitions.png", path = "./output",
width = 13.66, height = 7.05)
